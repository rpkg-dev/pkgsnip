[{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/articles/pkgsnip.html","id":"r-markdown-file-snippets","dir":"Articles","previous_headings":"","what":"R Markdown file snippets","title":"Introduction to pkgsnip","text":"(R) Markdown file snippets can used anywhere (R) Markdown input supported. example, can use input knitr’s child document option: inserting snippets require name calling package like \"installation-notice_dev-version_gitlab.Rmd\", either use pal::build_readme() build .Rmd file manually assign pkg_metadata <- pal::desc_list() environment passed devtools::build_rmd() ... argument respectively. can also use snippets roxygen2’s @includeRmd tag: snippets require name calling package, just assign pkg_metadata () inserting snippet(s), e.g. like :","code":"```{r, child = pkgsnip::snip_path(\"installation-notice_dev-version_gitlab.Rmd\")} ``` #' @includeRmd `r pkgsnip::snip_path(\"rmd-package-notice.Rmd\")` #' `r pkg_metadata <- pal::desc_list()` #' #' @includeRmd `r pkgsnip::snip_path(\"installation-notice_dev-version.Rmd\")`"},{"path":"https://pkgsnip.rpkg.dev/dev/articles/pkgsnip.html","id":"available-snippets","dir":"Articles","previous_headings":"R Markdown file snippets","what":"Available snippets","title":"Introduction to pkgsnip","text":"Currently, following R Markdown file snippets included: coding-style-notice.Rmd installation-notice_dev-version.Rmd installation-notice_dev-version_gitlab.Rmd rmd-package-notice.Rmd","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/articles/pkgsnip.html","id":"roxygen2-tag-labels","dir":"Articles","previous_headings":"","what":"roxygen2 tag labels","title":"Introduction to pkgsnip","text":"roxygen2 tag labels specifically meant @-tag-based documentation using dynamic R code. Insert functions using inline R code, e.g. follows result ","code":"#' @param use_cache `r pkgsnip::param_label(\"use_cache\")` #' @param cache_lifespan `r pkgsnip::param_label(\"cache_lifespan\")` #' @return `r pkgsnip::return_label(\"data\")` #' @param use_cache Return cached results if possible. If `FALSE`, results are always newly fetched regardless of `cache_lifespan`. #' @param cache_lifespan The duration after which cached results are refreshed (i.e. newly fetched). A valid [lubridate duration][lubridate::as.duration]. Only relevant if `use_cache = TRUE`. #' @return A [tibble][tibble::tbl_df]."},{"path":"https://pkgsnip.rpkg.dev/dev/articles/pkgsnip.html","id":"r-condition-messages","dir":"Articles","previous_headings":"","what":"R condition messages","title":"Introduction to pkgsnip","text":"meant used message texts base R’s message(), warning() stop() functions rlang::inform(), rlang::warn() rlang::abort() tidyverse respectively. message can retrieved using pkgsnip::msg(). messages, arguments need provided can tailored specific purpose. example, pkg_required message requires pkg argument: results following message text: Currently, following R condition messages included:","code":"pkgsnip::msg(name = \"pkg_required\",              pkg = \"some_pkg\") To be able to use this function, the package 'some_pkg' is required but it is not installed. Please install it and then try again."},{"path":"https://pkgsnip.rpkg.dev/dev/articles/pkgsnip.html","id":"common-abbreviations","dir":"Articles","previous_headings":"","what":"Common abbreviations","title":"Introduction to pkgsnip","text":"Finally, ’s table included lists (opinionated) set abbreviations commonly used writing R code. might come handy reference, example, check availability considering using abbreviation function argument name. table can retrieved calling pkgsnip::abbreviations() currently looks follows (click expand):","code":"#> Warning: There was 1 warning in `dplyr::mutate()`. #> ℹ In argument: `dplyr::across(...)`. #> Caused by warning: #> ! The `...` argument of `across()` is deprecated as of dplyr 1.1.0. #> Supply arguments directly to `.fns` through an anonymous function instead. #>  #>   # Previously #>   across(a:b, mean, na.rm = TRUE) #>  #>   # Now #>   across(a:b, \\(x) mean(x, na.rm = TRUE))"},{"path":"https://pkgsnip.rpkg.dev/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Salim Brüggemann. Author, maintainer.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brüggemann S (2023). pkgsnip: Standardized Labels, Messages (R) Markdown Snippets Package Authors. https://pkgsnip.rpkg.dev, https://gitlab.com/salim_b/r/pkgs/pkgsnip.","code":"@Manual{,   title = {pkgsnip: Standardized Labels, Messages and (R) Markdown Snippets for Package Authors},   author = {Salim Brüggemann},   year = {2023},   note = {https://pkgsnip.rpkg.dev, https://gitlab.com/salim_b/r/pkgs/pkgsnip}, }"},{"path":"https://pkgsnip.rpkg.dev/dev/index.html","id":"pkgsnip-standardized-labels-messages-and-r-markdown-snippets-for-package-authors","dir":"","previous_headings":"","what":"Standardized Labels, Messages and (R) Markdown Snippets for Package Authors","title":"Standardized Labels, Messages and (R) Markdown Snippets for Package Authors","text":"pkgsnip ships ready--go (R) Markdown snippets labels intended used roxygen2 documentation knitr child documents. Also included predefined R condition messages table abbreviations commonly used R code. designed reduce unnecessary repetition standardize R-package documentation wherever possible.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Standardized Labels, Messages and (R) Markdown Snippets for Package Authors","text":"install latest development version pkgsnip, run following R:","code":"if (!(\"remotes\" %in% rownames(installed.packages()))) {   install.packages(pkgs = \"remotes\",                    repos = \"https://cloud.r-project.org/\") }  remotes::install_gitlab(repo = \"salim_b/r/pkgs/pkgsnip\")"},{"path":"https://pkgsnip.rpkg.dev/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Standardized Labels, Messages and (R) Markdown Snippets for Package Authors","text":"introduction package given . (function) reference found .","code":""},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/index.html","id":"r-markdown-format","dir":"","previous_headings":"Development","what":"R Markdown format","title":"Standardized Labels, Messages and (R) Markdown Snippets for Package Authors","text":"package’s source code written R Markdown file format facilitate practices commonly referred literate programming. allows actual code freely mixed explanatory supplementary information expressive Markdown format instead rely # comments . .gen.R suffixed R source code found R/ generated respective R Markdown counterparts Rmd/ using pkgpurl::purl_rmd()1. Always make changes .Rmd files – never .R files – run pkgpurl::purl_rmd() regenerate R source files.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/index.html","id":"coding-style","dir":"","previous_headings":"Development","what":"Coding style","title":"Standardized Labels, Messages and (R) Markdown Snippets for Package Authors","text":"package borrows lot Tidyverse design philosophies. R code adheres principles specified Tidyverse Design Guide wherever possible formatted according Tidyverse Style Guide (TSG) following exceptions: Line width limited 160 characters, double limit proposed TSG (80 characters ridiculously little given today’s high-resolution wide screen monitors). Furthermore, preferred style breaking long lines differs. Instead wrapping directly expression’s opening bracket suggested TSG, prefer two fewer line breaks indent subsequent lines within expression opening bracket: results less vertical horizontal spread code better readability pipes. Usage magrittr’s compound assignment pipe-operator %<>% desirable2. Usage R’s right-hand assignment operator -> allowed3. R source code split several files suggested TSG instead (far possible) kept single file Rmd/pkgsnip.Rmd well-structured thanks Markdown support. far possible, deviations TSG plus additional restrictions formally specified lintr configuration file .lintr, lintr can used right away check formatting issues:","code":"# TSG proposes this do_something_very_complicated(   something = \"that\",   requires = many,   arguments = \"some of which may be long\" )  # we prefer this do_something_very_complicated(something = \"that\",                               requires = many,                               arguments = \"some of which may be long\") pkgpurl::lint_rmd()"},{"path":"https://pkgsnip.rpkg.dev/dev/reference/abbreviations.html","id":null,"dir":"Reference","previous_headings":"","what":"Commonly used abbreviations in R code — abbreviations","title":"Commonly used abbreviations in R code — abbreviations","text":"Returns tibble listing opinionated set abbreviations commonly used writing R code. can used reference, example, check availability/consistency considering using abbreviation function argument name.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/abbreviations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Commonly used abbreviations in R code — abbreviations","text":"","code":"abbreviations(expand = FALSE)  abbrs(expand = FALSE)"},{"path":"https://pkgsnip.rpkg.dev/dev/reference/abbreviations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Commonly used abbreviations in R code — abbreviations","text":"expand Whether expand full_expression column return data long format. FALSE, \"nested\" list column full_expressions returned, meaning values column abbreviation unique.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/abbreviations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Commonly used abbreviations in R code — abbreviations","text":"tibble.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/abbreviations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Commonly used abbreviations in R code — abbreviations","text":"avoid list getting excessively long redundant, main focus verbs nouns. Adjectives adverbs listed column full_expression already verb noun root word listed particular abbreviation. means e.g. abbreviation \"seq\" also stand full expressions \"sequential\" \"sequentially\", despite fact explicitly listed merely verb/noun \"sequence\" .","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/abbreviations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Commonly used abbreviations in R code — abbreviations","text":"","code":"pkgsnip::abbrs(expand = TRUE) |> print(n = Inf) #> # A tibble: 186 × 2 #>     full_expression     abbreviation #>     <chr>               <chr>        #>   1 abbreviate          abbr         #>   2 abbreviation        abbr         #>   3 abbreviations       abbrs        #>   4 absolute            abs          #>   5 argument            arg          #>   6 arguments           args         #>   7 attribute           attr         #>   8 attributes          attrs        #>   9 authenticate        auth         #>  10 authentication      auth         #>  11 authentications     auths        #>  12 background          bg           #>  13 bibliography        bib          #>  14 bibliographies      bibs         #>  15 chapter             chpt         #>  16 chapters            chpts        #>  17 character           chr          #>  18 characters          chrs         #>  19 column              col          #>  20 columns             cols         #>  21 command             cmd          #>  22 commands            cmds         #>  23 combination         combo        #>  24 combinations        combos       #>  25 condition           cnd          #>  26 conditions          cnds         #>  27 configure           config       #>  28 configuration       config       #>  29 configurations      configs      #>  30 current             cur          #>  31 database            db           #>  32 dataframe           df           #>  33 dataframes          dfs          #>  34 dataframe column    dfc          #>  35 dataframe row       dfr          #>  36 define              def          #>  37 definition          def          #>  38 definitions         defs         #>  39 depend              dep          #>  40 dependency          dep          #>  41 dependencies        deps         #>  42 develop             dev          #>  43 development         dev          #>  44 developer           dev          #>  45 developments        devs         #>  46 developers          devs         #>  47 dictionary          dict         #>  48 dictionaries        dicts        #>  49 differentiate       diff         #>  50 difference          diff         #>  51 differences         diffs        #>  52 directory           dir          #>  53 directories         dirs         #>  54 distribution        distro       #>  55 distributions       distros      #>  56 document            doc          #>  57 documents           docs         #>  58 double              dbl          #>  59 doubles             dbls         #>  60 element             el           #>  61 elements            els          #>  62 environment         env          #>  63 environments        envs         #>  64 exclude             excl         #>  65 exclusion           excl         #>  66 expression          expr         #>  67 expressions         exprs        #>  68 factor              fct          #>  69 factors             fcts         #>  70 figure              fig          #>  71 figures             figs         #>  72 filesystem          fs           #>  73 formula             fm           #>  74 formulas            fms          #>  75 formulae            fms          #>  76 frequent            freq         #>  77 frequency           freq         #>  78 frequencies         freqs        #>  79 function            fn           #>  80 functions           fns          #>  81 generate            gen          #>  82 generation          gen          #>  83 generations         gens         #>  84 identify            id           #>  85 identifier          id           #>  86 identifiers         ids          #>  87 include             incl         #>  88 inclusion           incl         #>  89 index               i            #>  90 indexes             ix           #>  91 indices             ix           #>  92 information         info         #>  93 initialize          init         #>  94 initialization      init         #>  95 integer             int          #>  96 integers            ints         #>  97 label               lbl          #>  98 labels              lbls         #>  99 language            lang         #> 100 languages           langs        #> 101 left-hand side      lhs          #> 102 level               lvl          #> 103 levels              lvls         #> 104 list                ls           #> 105 logical             lgl          #> 106 logicals            lgls         #> 107 management          mgmt         #> 108 Markdown            md           #> 109 message             msg          #> 110 messages            msgs         #> 111 modify              mod          #> 112 modification        mod          #> 113 modifications       mods         #> 114 number              nr           #> 115 numbers             nrs          #> 116 number of           n            #> 117 numeric             num          #> 118 numerics            nums         #> 119 object              obj          #> 120 objects             objs         #> 121 option              opt          #> 122 options             opts         #> 123 package             pkg          #> 124 packages            pkgs         #> 125 parameterize        param        #> 126 parameter           param        #> 127 parameters          params       #> 128 proceed             prcd         #> 129 procedure           prcd         #> 130 procedures          prcds        #> 131 prototype           ptype        #> 132 prototypes          ptypes       #> 133 Quarto Markdown     qmd          #> 134 questionnaire       qstnr        #> 135 questionnaires      qstnrs       #> 136 R Markdown          rmd          #> 137 refer               ref          #> 138 reference           ref          #> 139 references          refs         #> 140 referendum          rfrnd        #> 141 referendums         rfrnds       #> 142 referenda           rfrnds       #> 143 regular expression  regex        #> 144 regular expressions regex        #> 145 relative            rel          #> 146 remove              rm           #> 147 removal             rm           #> 148 repo                repository   #> 149 repos               repositories #> 150 right-hand side     rhs          #> 151 roxygen2            roxy         #> 152 separate            sep          #> 153 separator           sep          #> 154 separators          seps         #> 155 sequence            seq          #> 156 sequences           seqs         #> 157 source              src          #> 158 sources             srcs         #> 159 specify             spec         #> 160 specification       spec         #> 161 specifications      specs        #> 162 string              str          #> 163 strings             strs         #> 164 structure           struct       #> 165 structures          structs      #> 166 supplemental        suppl        #> 167 supplementary       suppl        #> 168 symbolize           sym          #> 169 symbol              sym          #> 170 symbols             syms         #> 171 tabulate            tbl          #> 172 table               tbl          #> 173 tables              tbls         #> 174 template            tpl          #> 175 templates           tpls         #> 176 temporary           tmp          #> 177 value               val          #> 178 values              vals         #> 179 variable            var          #> 180 variables           vars         #> 181 vectorize           vctr         #> 182 vector              vctr         #> 183 vectors             vctrs        #> 184 version             vrsn         #> 185 versions            vrsns        #> 186 working directory   wd"},{"path":"https://pkgsnip.rpkg.dev/dev/reference/ls_file_snips.html","id":null,"dir":"Reference","previous_headings":"","what":"List all available R Markdown file snippets — ls_file_snips","title":"List all available R Markdown file snippets — ls_file_snips","text":"Lists R Markdown snippets shipped package, together paths located filesystem.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/ls_file_snips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all available R Markdown file snippets — ls_file_snips","text":"","code":"ls_file_snips()"},{"path":"https://pkgsnip.rpkg.dev/dev/reference/ls_file_snips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all available R Markdown file snippets — ls_file_snips","text":"pkgsnip::return_label(\"data\")","code":""},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/reference/md_snip.html","id":null,"dir":"Reference","previous_headings":"","what":"Get predefined Markdown snippet — md_snip","title":"Get predefined Markdown snippet — md_snip","text":"Get predefined Markdown snippet","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/md_snip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get predefined Markdown snippet — md_snip","text":"","code":"md_snip(name = md_snips()$name, ...)"},{"path":"https://pkgsnip.rpkg.dev/dev/reference/md_snip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get predefined Markdown snippet — md_snip","text":"name snippet name. ... named arguments used tailor snippet needs. snippets require additional arguments, see md_snips() overview. required argument explicitly provided, searched parent frames.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/md_snip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get predefined Markdown snippet — md_snip","text":"character scalar.","code":""},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/reference/md_snips.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a table of all Markdown snippets included in this package — md_snips","title":"Get a table of all Markdown snippets included in this package — md_snips","text":"Returns tibble listing Markdown snippets together name can provided md_snip()'s name argument.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/md_snips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a table of all Markdown snippets included in this package — md_snips","text":"","code":"md_snips()"},{"path":"https://pkgsnip.rpkg.dev/dev/reference/md_snips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a table of all Markdown snippets included in this package — md_snips","text":"tibble.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/md_snips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a table of all Markdown snippets included in this package — md_snips","text":"Currently, Markdown snippets following names available:","code":""},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/reference/message.html","id":null,"dir":"Reference","previous_headings":"","what":"Get predefined R condition message — message","title":"Get predefined R condition message — message","text":"Get predefined R condition message","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get predefined R condition message — message","text":"","code":"message(name = messages()$name, ...)  msg(name = messages()$name, ...)"},{"path":"https://pkgsnip.rpkg.dev/dev/reference/message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get predefined R condition message — message","text":"name message name. See messages() possible values. ... named arguments used tailor message needs. messages require additional arguments, see messages() overview. required argument explicitly provided, searched parent frames.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get predefined R condition message — message","text":"character scalar.","code":""},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/reference/message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get predefined R condition message — message","text":"","code":"pkgsnip::message(name = \"pkg_required\",                  this_pkg = \"some_pkg\") #> To be able to use this function, the package 'some_pkg' is required but it is not installed. Please install it and then try again."},{"path":"https://pkgsnip.rpkg.dev/dev/reference/messages.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a table of all available R condition messages — messages","title":"Get a table of all available R condition messages — messages","text":"Returns tibble listing R condition messages included package, together name can provided message()'s name argument.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/messages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a table of all available R condition messages — messages","text":"","code":"messages()  msgs()"},{"path":"https://pkgsnip.rpkg.dev/dev/reference/messages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a table of all available R condition messages — messages","text":"tibble.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/messages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a table of all available R condition messages — messages","text":"Currently, R condition messages following names arguments available:","code":""},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/reference/param_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Get predefined parameter label — param_label","title":"Get predefined parameter label — param_label","text":"Returns pre-defined label intended used document function parameters using roxygen2's @param tag.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/param_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get predefined parameter label — param_label","text":"","code":"param_label(name = roxy_labels(type = \"param\")$name, ...)  param_lbl(name = roxy_labels(type = \"param\")$name, ...)"},{"path":"https://pkgsnip.rpkg.dev/dev/reference/param_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get predefined parameter label — param_label","text":"name label name. See roxy_labels() possible values. ... named arguments used tailor label needs. labels require additional arguments, see roxy_labels() overview. required argument explicitly provided, searched parent frames.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/param_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get predefined parameter label — param_label","text":"character vector.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/param_label.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get predefined parameter label — param_label","text":"label can inserted using inline R code follows:   Note works roxygen2 7.1.0+. Currently, following parameter labels available:","code":"#' @param start_date `r pkgsnip::param_label(\"start_date\")`"},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/reference/pkgsnip-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pkgsnip: Standardized Labels, Messages and (R) Markdown Snippets for Package Authors — pkgsnip-package","title":"pkgsnip: Standardized Labels, Messages and (R) Markdown Snippets for Package Authors — pkgsnip-package","text":"pkgsnip ships ready--go (R) Markdown snippets labels intended used roxygen2 documentation knitr child documents. Also included predefined R condition messages table abbreviations commonly used R code. designed reduce unnecessary repetition standardize R-package documentation wherever possible.","code":""},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/reference/pkgsnip-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pkgsnip: Standardized Labels, Messages and (R) Markdown Snippets for Package Authors — pkgsnip-package","text":"Maintainer: Salim Brüggemann salim-b@pm.(ORCID)","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/return_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Get predefined return label — return_label","title":"Get predefined return label — return_label","text":"Returns pre-defined label intended used document function return values using roxygen2's @return tag.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/return_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get predefined return label — return_label","text":"","code":"return_label(name = roxy_labels(type = \"return\")$name, ...)  return_lbl(name = roxy_labels(type = \"return\")$name, ...)"},{"path":"https://pkgsnip.rpkg.dev/dev/reference/return_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get predefined return label — return_label","text":"name label name. See roxy_labels() possible values. ... named arguments used tailor label needs. labels require additional arguments, see roxy_labels() overview. required argument explicitly provided, searched parent frames.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/return_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get predefined return label — return_label","text":"character vector.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/return_label.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get predefined return label — return_label","text":"label can inserted using inline R code follows:   Note works roxygen2 7.1.0+. Currently, following return labels available:","code":"#' @return version_nr `r pkgsnip::return_label(\"version_nr\")`"},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/reference/roxy_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Get predefined roxygen2 tag label — roxy_label","title":"Get predefined roxygen2 tag label — roxy_label","text":"Returns pre-defined label intended used document functions using roxygen2 tags.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/roxy_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get predefined roxygen2 tag label — roxy_label","text":"","code":"roxy_label(   name = roxy_labels()$name,   type = c(\"any\", \"param\", \"return\", NA_character_),   ... )  roxy_lbl(   name = roxy_labels()$name,   type = c(\"any\", \"param\", \"return\", NA_character_),   ... )"},{"path":"https://pkgsnip.rpkg.dev/dev/reference/roxy_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get predefined roxygen2 tag label — roxy_label","text":"name label name. See roxy_labels() possible values. ... named arguments used tailor label needs. labels require additional arguments, see roxy_labels() overview. required argument explicitly provided, searched parent frames.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/roxy_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get predefined roxygen2 tag label — roxy_label","text":"character vector.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/roxy_label.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get predefined roxygen2 tag label — roxy_label","text":"labels can inserted using inline R code follows:   Note works roxygen2 7.1.0+.","code":"#' @param start_date `r pkgsnip::roxy_label(\"start_date\", type = \"param\")` #' @return `r pkgsnip::roxy_label(\"data\", type = \"return\")`"},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/reference/roxy_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a table of all available roxygen2 tag labels — roxy_labels","title":"Get a table of all available roxygen2 tag labels — roxy_labels","text":"Returns tibble listing parameter labels included package, together name can provided name argument param_label() return_label().","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/roxy_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a table of all available roxygen2 tag labels — roxy_labels","text":"","code":"roxy_labels(type = c(\"any\", \"param\", \"return\", NA_character_))  roxy_lbls(type = c(\"any\", \"param\", \"return\", NA_character_))"},{"path":"https://pkgsnip.rpkg.dev/dev/reference/roxy_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a table of all available roxygen2 tag labels — roxy_labels","text":"type label type return. character scalar.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/roxy_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a table of all available roxygen2 tag labels — roxy_labels","text":"tibble.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/roxy_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a table of all available roxygen2 tag labels — roxy_labels","text":"Currently, parameter labels following types names available:","code":""},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/reference/snip_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get R Markdown snippet file path — snip_path","title":"Get R Markdown snippet file path — snip_path","text":"Returns file path R Markdown snippet shipped package.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/snip_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get R Markdown snippet file path — snip_path","text":"","code":"snip_path(name = ls_file_snips()$name)"},{"path":"https://pkgsnip.rpkg.dev/dev/reference/snip_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get R Markdown snippet file path — snip_path","text":"name name snippet. Possible values include: \"coding-style-notice.Rmd\" \"installation-notice_dev-version.Rmd\" \"installation-notice_dev-version_gitlab.Rmd\" \"rmd-package-notice.Rmd\"","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/snip_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get R Markdown snippet file path — snip_path","text":"path.","code":""},{"path":"https://pkgsnip.rpkg.dev/dev/reference/snip_path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get R Markdown snippet file path — snip_path","text":"snippets can used anywhere R Markdown input supported. example, can use input knitr's child document option:   can use roxygen2's @includeRmd tag:","code":"#' @includeRmd `r pkgsnip::snip_path(\"installation-notice_dev-version_gitlab.Rmd\")`"},{"path":[]},{"path":"https://pkgsnip.rpkg.dev/dev/reference/snip_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get R Markdown snippet file path — snip_path","text":"","code":"pkgsnip::snip_path(\"coding-style-notice.Rmd\") #> /home/salim/Code/own/salim_b/r/pkgs/pkgsnip/inst/snippets/coding-style-notice.Rmd"}]
